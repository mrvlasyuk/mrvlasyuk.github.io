{"version":3,"file":"js/app.6bb26661.js","mappings":"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","sources":["webpack://brain_chess_scorer/./src/App.vue","webpack://brain_chess_scorer/./src/components/ChessPuzzle.vue","webpack://brain_chess_scorer/./src/components/ChessPuzzle.vue?4d6f","webpack://brain_chess_scorer/./src/App.vue?7ccd","webpack://brain_chess_scorer/./src/main.js","webpack://brain_chess_scorer/webpack/bootstrap","webpack://brain_chess_scorer/webpack/runtime/chunk loaded","webpack://brain_chess_scorer/webpack/runtime/compat get default export","webpack://brain_chess_scorer/webpack/runtime/define property getters","webpack://brain_chess_scorer/webpack/runtime/global","webpack://brain_chess_scorer/webpack/runtime/hasOwnProperty shorthand","webpack://brain_chess_scorer/webpack/runtime/jsonp chunk loading","webpack://brain_chess_scorer/webpack/startup"],"sourcesContent":["<template>\n  <ChessPuzzle />\n</template>\n\n<script>\nimport ChessPuzzle from \"./components/ChessPuzzle.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    ChessPuzzle,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","// The goal of the project is fast scoring of your brain energy and sharpness by solving chess puzzles. \n// Motivation: I wanted to create a simple and fast way to measure my brain energy and sharpness during the day.\n// Absolute rating is not important, only the trend is important.\n\n<template>\n  <div class=\"puzzle-container flex flex-col items-center\">\n    <!-- Header -->\n    <h1 class=\"text-3xl font-extrabold mb-2\">\n      Cognitive Score: Chess Puzzles as Your Metric\n    </h1>\n\n    <TheChessboard\n      class=\"chessboard\"\n      :board-config=\"boardConfig\"\n      @board-created=\"boardCreated\"\n      @move=\"onMove\"\n    />\n\n    <div class=\"puzzle-top\">\n      <div class=\"puzzle-rating\">\n        <span class=\"puzzle-rating-label\">Puzzle rating:</span>\n        <span class=\"puzzle-rating-value\">{{ puzzle?.Rating }}</span>\n      </div>\n\n      <svg class=\"progress-ring\" width=\"60\" height=\"60\">\n        <circle\n          class=\"progress-ring__circle\"\n          stroke=\"green\"\n          stroke-width=\"4\"\n          fill=\"transparent\"\n          :r=\"radius\"\n          cx=\"30\"\n          cy=\"30\"\n        />\n      </svg>\n    </div>\n\n    <div class=\"info_block my-10\">\n      <div class=\"user-rating\">\n        <span class=\"user-rating-label\">My rating:</span>\n        <span class=\"user-rating-value\">{{ userRating }}</span>\n        <span class=\"user-rating-deviation\">±{{ userRatingDeviation }}</span>\n      </div>\n\n      <div v-if=\"historyOfRatings.length > 0\" class=\"history m-b-5\">\n        <h1 class=\"text-xl font-extrabold\">History</h1>\n        <table class=\"history-table\">\n          <tr v-for=\"(rating, index) in historyOfRatings\" :key=\"rating.time\">\n            <td>{{ formatDate(rating.time) }}</td>\n            <td>{{ rating.rating }}</td>\n            <td>±{{ rating.deviation }}</td>\n            <td>\n              <button @click=\"deleteHistoryEntry(index)\">✖</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n    <div class=\"explanation info_block my-10\">\n      <div\n        class=\"explanation-block\"\n        @click=\"isGoalCollapsed = !isGoalCollapsed\"\n      >\n        <h1 class=\"text-xl font-extrabold mb-2\">\n          Goal of the Chess Puzzle Page\n          <span v-if=\"isGoalCollapsed\">▼</span>\n          <span v-else>▲</span>\n        </h1>\n        <div v-if=\"!isGoalCollapsed\">\n          <p>\n            The Chess Puzzle page is designed to measure and track cognitive\n            sharpness and brain energy through the challenge of solving chess\n            puzzles. It is a tool for users to assess their mental acuity at\n            different times of the day.\n          </p>\n\n          <h2 class=\"text-xl font-extrabold my-2\">Rules and Features</h2>\n          <ul>\n            <li>\n              <strong>Chess Puzzle Solving:</strong> Solve chess puzzles within\n              a set time limit to test your cognitive skills.\n            </li>\n            <li>\n              <strong>Rating System:</strong> Each puzzle has a difficulty\n              rating, and users have their own ratings that adjust based on\n              performance.\n            </li>\n            <li>\n              <strong>Timer:</strong> A countdown timer adds urgency to the\n              puzzle-solving experience.\n            </li>\n            <li>\n              <strong>User Performance Tracking:</strong> Track your rating\n              changes and rating deviation to monitor your progress over time.\n            </li>\n            <li>\n              <strong>History:</strong> A historical record of your ratings is\n              maintained to help you see trends in your performance.\n            </li>\n            <li>\n              <strong>Adaptive Difficulty:</strong> Puzzles are matched to your\n              rating level to provide a consistent challenge.\n            </li>\n            <li>\n              <strong>Local Storage:</strong> Your rating history is stored\n              locally to maintain progress across sessions.\n            </li>\n            <li>\n              <strong>Glicko-2 Rating System:</strong> The user's rating is\n              updated using the Glicko-2 system, reflecting changes in skill\n              level after each puzzle.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"showCheckmark\" class=\"checkmark-emoji\">&#x2714;</div>\n  </div>\n</template>\n\n\n<script setup>\nimport { TheChessboard } from \"vue3-chessboard\";\nimport \"vue3-chessboard/style.css\";\nimport { ref, onMounted } from \"vue\";\nimport { Glicko2 } from \"glicko2\";\n\nconst apiUrl = \"http://localhost:8000/get_puzzle\";\n\nconst puzzle = ref(null);\nconst historyOfRatings = ref([]);\nconst showCheckmark = ref(false);\nconst boardConfig = {};\nconst isGoalCollapsed = ref(true);\n\nconst timeLeft = ref(10);\nlet countdownInterval = null;\n\nlet lastPuzzleSolved = false;\n\nlet boardAPI = null;\nlet movesArray = [];\nlet sideToPlay = \"w\";\n\n// Create a Glicko-2 player for the user\nlet userRating = ref(null);\nlet userRatingDeviation = ref(null); // You may want to initialize this appropriately\n// let lastFailBecauseOfTime = false;\n\nlet glicko = null;\nlet userPlayer = null;\n\nconst initBoard = (FEN, moves) => {\n  boardAPI.setPosition(FEN);\n\n  const lastMoveSide = FEN.split(\" \")[1];\n  sideToPlay = lastMoveSide === \"w\" ? \"b\" : \"w\";\n  movesArray = moves.split(\" \");\n\n  let curr_board_orientation = boardAPI.board.state.orientation;\n  curr_board_orientation = curr_board_orientation === \"white\" ? \"w\" : \"b\";\n\n  if (sideToPlay !== curr_board_orientation) {\n    boardAPI.toggleOrientation();\n  }\n};\n\nconst fetchPuzzle = async () => {\n  try {\n    const response = await fetch(`${apiUrl}?rating=${userRating.value}`);\n    const data = await response.json();\n    puzzle.value = data;\n    // Initialize the board with the new puzzle\n\n    initBoard(data.FEN, data.Moves);\n\n    setTimeout(() => {\n      if (boardAPI !== null) {\n        boardAPI.move(movesArray[0]);\n      }\n    }, 300);\n    resetTimer();\n  } catch (error) {\n    console.error(\"Error fetching puzzle:\", error);\n  }\n};\n\nconst radius = 26; // The radius of the circle\nconst circumference = 2 * Math.PI * radius; // Calculate the circumference\n\n// Create a method to start the countdown\nconst startCountdown = () => {\n  timeLeft.value = 10; // Reset the countdown to 10 seconds\n  countdownInterval = setInterval(() => {\n    if (timeLeft.value > 0) {\n      timeLeft.value -= 0.1;\n\n      const circle = document.querySelector(\".progress-ring__circle\");\n      if (circle) {\n        const offset = circumference - (timeLeft.value / 10) * circumference;\n        circle.style.strokeDashoffset = offset.toString();\n        circle.style.strokeDasharray = circumference.toString();\n      }\n    } else {\n      clearInterval(countdownInterval);\n      if (lastPuzzleSolved) {\n        updateUserRating(false);\n      }\n      fetchPuzzle();\n    }\n  }, 100);\n};\n\n// Clear the interval when the puzzle is reset\nconst resetTimer = () => {\n  clearInterval(countdownInterval);\n  startCountdown();\n};\n\nconst boardCreated = (api) => {\n  boardAPI = api;\n  fetchPuzzle();\n};\n\nconst onMove = (move) => {\n  if (boardAPI.game.turn() === sideToPlay) {\n    return;\n  }\n  // console.log(boardAPI);\n  let lastMoveIx = boardAPI.game.history().length - 1;\n\n  // check players move\n  if (move.lan === movesArray[lastMoveIx]) {\n    console.log(\"correct move\");\n    // make computer move\n    if (lastMoveIx + 1 >= movesArray.length) {\n      console.log(\"Success!\");\n      showCheckmarkTimeout();\n      updateUserRating(true);\n      fetchPuzzle();\n      return;\n    }\n    setTimeout(() => {\n      boardAPI.move(movesArray[lastMoveIx + 1]);\n    }, 300);\n    // reset timerToNewPuzzle to 10 sec\n    resetTimer();\n  } else {\n    console.log(\"wrong move\");\n    setTimeout(() => {\n      boardAPI.undoLastMove();\n    }, 300);\n    updateUserRating(false);\n    fetchPuzzle();\n  }\n};\n\n// Function to update user rating\nconst updateUserRating = (puzzleSolved) => {\n  // Create a Glicko-2 player for the puzzle\n  const puzzlePlayer = glicko.makePlayer(\n    puzzle.value.Rating,\n    puzzle.value.RatingDeviation\n  );\n\n  // Set the result of the match (1 = win, 0.5 = draw, 0 = loss)\n  const result = puzzleSolved ? 1 : 0;\n\n  // Update ratings\n  glicko.updateRatings([[userPlayer, puzzlePlayer, result]]);\n\n  // Update user's displayed rating\n  userRating.value = Math.round(userPlayer.getRating());\n  userRatingDeviation.value = Math.round(userPlayer.getRd());\n  saveUserRating();\n\n  lastPuzzleSolved = puzzleSolved;\n};\n\nonMounted(() => {\n  loadRatingsHistory();\n  initRatings();\n  fetchPuzzle();\n});\n\nconst initRatings = () => {\n  let userVolatility = 0.06;\n\n  glicko = new Glicko2({\n    tau: 0.5,\n    rating: 1500,\n    rd: 200,\n    vol: userVolatility,\n  });\n\n  // try load user rating from localStorage\n  const history = JSON.parse(localStorage.getItem(\"history\")) || [];\n  if (history.length > 0) {\n    const lastRating = history[history.length - 1];\n    userRating.value = lastRating.rating;\n    userRatingDeviation.value = 200; // set high deviation to allow fast rating changes\n  } else {\n    userRating.value = 500;\n    userRatingDeviation.value = 1000;\n  }\n\n  userPlayer = glicko.makePlayer(\n    userRating.value,\n    userRatingDeviation.value,\n    userVolatility\n  );\n};\n\n// save User rating, deviation and current time as point in measurement history to localStorage\nconst saveUserRating = () => {\n  const FIVE_MINUTES = 5 * 60;\n  const data = {\n    rating: Math.round(userPlayer.getRating()),\n    deviation: Math.round(userPlayer.getRd()),\n    time: Math.round(Date.now() / 1000),\n  };\n\n  let history = JSON.parse(localStorage.getItem(\"history\")) || [];\n\n  if (\n    history.length === 0 ||\n    data.time - history[history.length - 1].time > FIVE_MINUTES\n  ) {\n    history.push(data);\n  } else {\n    history[history.length - 1] = data;\n  }\n\n  localStorage.setItem(\"history\", JSON.stringify(history));\n  loadRatingsHistory();\n};\n\nconst formatDate = (timestamp) => {\n  const date = new Date(timestamp * 1000);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day} ${hours}:${minutes}`;\n};\n\nconst deleteHistoryEntry = (index) => {\n  // Remove the entry from the array\n  historyOfRatings.value.splice(index, 1);\n  // Update localStorage with the new history\n  localStorage.setItem(\n    \"history\",\n    JSON.stringify(historyOfRatings.value.reverse())\n  );\n};\n\nconst loadRatingsHistory = () => {\n  let history = JSON.parse(localStorage.getItem(\"history\")) || [];\n  historyOfRatings.value = history.sort((a, b) => b.time - a.time);\n};\n\nconst showCheckmarkTimeout = () => {\n  showCheckmark.value = true;\n  setTimeout(() => {\n    showCheckmark.value = false;\n  }, 1000);\n};\n</script>\n\n\n\n<style>\n.puzzle-container {\n  max-width: 600px;\n  margin: 0 auto;\n}\n.chessboard {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  width: 100%;\n  margin-bottom: 5px;\n}\n\n.checkmark-emoji {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  font-size: 10rem;\n  animation: fadeOut 2s forwards;\n  transform: translate(-50%, -50%); /* Center the checkmark */\n  color: green;\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n\n.info_block {\n  padding: 20px;\n  margin: 20px auto;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background-color: #f9f9f9;\n  max-width: 600px;\n  text-align: left;\n  width: 100%;\n}\n\n.history-table {\n  width: 100%;\n}\n\n.history-table tr {\n  border-bottom: 1px solid #eaeaea;\n}\n\n.history-table td {\n  padding-right: 20px;\n  text-align: left;\n}\n\n.history-table button {\n  margin-left: 10px;\n  padding: 4px 8px;\n  color: #e74c3c;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.history-table button:hover {\n  background-color: #e74c3c;\n  color: white;\n}\n\n.puzzle-rating {\n  margin-bottom: 0.5rem;\n  margin-left: 2rem;\n}\n\n.puzzle-rating-label {\n  font-size: 2rem;\n  font-weight: bold; /* Make the label bold */\n  margin-right: 0.5rem; /* Spacing between the label and value */\n}\n\n.puzzle-rating-value {\n  font-size: 2rem;\n  font-weight: normal; /* Normal font weight for the value */\n}\n\n.user-rating {\n  margin-bottom: 1rem;\n}\n\n.user-rating-label {\n  font-size: 2rem;\n  font-weight: bold;\n}\n\n.user-rating-value {\n  font-size: 2rem;\n  padding-left: 2rem;\n  padding-right: 0.25rem;\n}\n\n.user-rating-deviation {\n  font-size: 1.5rem;\n  color: #7f8c8d;\n}\n\n/* Responsive design for mobile devices */\n@media (max-width: 600px) {\n  .puzzle-container {\n    padding: 10px; /* Reduce padding on smaller screens */\n  }\n\n  .chessboard {\n    width: 90%; /* Reduce width to provide padding around the board */\n    margin-bottom: 10px; /* Reduce space below the chessboard */\n  }\n}\n\n.progress-ring {\n  transform: rotate(\n    -90deg\n  ); /* Rotate the progress ring to start from the top */\n}\n\n.progress-ring__circle {\n  transition: stroke-dashoffset 0.35s;\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n}\n\n.puzzle-top {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\nli {\n  margin-bottom: 10px;\n}\n\n.explanation-block:hover {\n  cursor: pointer;\n}\n</style>","import script from \"./ChessPuzzle.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChessPuzzle.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChessPuzzle.vue?vue&type=style&index=0&id=7a1e9b84&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=25cfe235\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=25cfe235&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import './assets/styles.css';\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbrain_chess_scorer\"] = self[\"webpackChunkbrain_chess_scorer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4417); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_ChessPuzzle","apiUrl","radius","puzzle","ref","historyOfRatings","showCheckmark","boardConfig","isGoalCollapsed","timeLeft","countdownInterval","lastPuzzleSolved","boardAPI","movesArray","sideToPlay","userRating","userRatingDeviation","glicko","userPlayer","initBoard","FEN","moves","setPosition","lastMoveSide","split","curr_board_orientation","board","state","orientation","toggleOrientation","fetchPuzzle","async","response","fetch","value","data","json","Moves","setTimeout","move","resetTimer","error","console","circumference","Math","PI","startCountdown","setInterval","circle","document","querySelector","offset","style","strokeDashoffset","toString","strokeDasharray","clearInterval","updateUserRating","boardCreated","api","onMove","game","turn","lastMoveIx","history","length","lan","log","showCheckmarkTimeout","undoLastMove","puzzleSolved","puzzlePlayer","makePlayer","Rating","RatingDeviation","result","updateRatings","round","getRating","getRd","saveUserRating","onMounted","loadRatingsHistory","initRatings","userVolatility","Glicko2","tau","rating","rd","vol","JSON","parse","localStorage","getItem","lastRating","FIVE_MINUTES","deviation","time","Date","now","push","setItem","stringify","formatDate","timestamp","date","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","deleteHistoryEntry","index","splice","reverse","sort","a","b","__exports__","name","components","ChessPuzzle","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}